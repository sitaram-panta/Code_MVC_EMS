@model VMAdminIndex
@{
    int sn = 1;
    int isPresent = 0;
    if (TempData.ContainsKey("emailPresence"))
    {
        if (TempData["emailPresence"].ToString() == "True")
        {
            isPresent = 1;
        }
    }
    string[] colors = { "#352f44", "#512b81", "#cd1818", "#810ca8", "#1e5128", "#d89216", "#200f21" };
}
<style>
    .error{
        color:red;
    }
</style>
<div class="container">
    <div class="d-flex justify-content-end mb-4 mt-2">
        <div>
            <button class="btn btn-success" id="showAddUserPopupBox">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
                </svg>
                Add User
            </button>
        </div>
        <div style="margin-left: 10px;">
            @Html.ActionLink("Upload Employee", "Index", "EmployeeMigration", new { area = "" }, new { @class = "btn btn-primary" })
        </div>

    </div>
    <table class="table" id="myTable">
        <thead class="table-dark">
            <tr>
                <th>SN</th>
                <th>Name</th>
                <th>Email</th>
                <th>Address</th>
                <th>Mobile</th>
                <th>Join Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model.EmployeeList)
            {
                Random random = new Random();
                int randomNumber = random.Next(0, 5);
                <tr>
                    <td>@(sn++)</td>
                    <td>
                        <div class="d-flex" style="align-items:center;gap:10px;">
                            <div class="rounded-circle d-flex justify-content-center" style="background-color:@colors[randomNumber];width:50px;height:50px;overflow:hidden;align-items:center;">
                                @if (employee.ProfileImg.ToString() != "")
                                {
                                    <img class="w-100 h-100" src=@(employee.ProfileImg) alt="" style="object-fit:cover">
                                }
                                else
                                {
                                    <h3 class="text-white mt-2">@(char.ToUpper(employee.Name[0]))</h3>
                                }
                            </div>
                            <p class="mt-2 fw-bold">
                                <a href="@Url.Action("UserDetails", new{id=employee.Id})">
                                    @(employee.Name)
                                </a>
                            </p>
                        </div>
                        <script>

                        </script>
                    </td>
                    <td>@(employee.Email)</td>
                    <td>@(employee.Address)</td>
                    <td>@(employee.ContactNumber)</td>
                    <td>@(employee.JoinDate.ShowDate())</td>
                    <td>
                        <div class="d-flex" style="gap:10px">
                            <a asp-controller="User" asp-action="EmployeeEditProfile" asp-route-id=@(employee.Id) style="color:black;text-decoration:none">
                                <button class="btn btn-warning" id=@(employee.Id)>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                        <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                    </svg>
                                </button>
                            </a>
                            @if (employee.Email != "admin@gmail.com")
                            {
                                @using (Html.BeginForm("deleteUser", "User", FormMethod.Post))
                                {
                                    <input hidden name="employeeId" value="@(employee.Id)" />
                                    <button type="submit" class="btn btn-danger">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                            <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z" />
                                        </svg>
                                    </button>
                                }
                            }
                            <button class="btn btn-primary">
                                <a asp-controller="User" asp-action="UserDetails" asp-route-id="@(employee.Id)" class="text-decoration-none text-white">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16">
                                        <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z" />
                                        <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z" />
                                    </svg>
                                </a>
                            </button>
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
@section Scripts{
    <script>

        if (@isPresent === 1) {
            $("#blurBox").removeClass("d-none");
            $("#addUserDataFormBox").removeClass("d-none");
        }
        $('#myTable').DataTable();
        function validatePassword(x) {
            event.preventDefault();
            var passwordValue = $("#editUserDataFormBox_" + x + " input[name='Password']").val();
            if (passwordValue.length < 5) {
                $("#editUserDataFormBox_" + x + " input[name='Password']").addClass("is-invalid");
                $("#editUserDataFormBox_" + x + " span").text("Password length must be atlest 5")
                return false;
            }
            const form = document.getElementById("updateUserForm_" + x);
            const formAction = "@Url.Action("editUser", "User")";
            form.action = formAction;
            form.submit();

        }
        $("#closeAddUserPopUpBtn").on("click", () => {
            $("#blurBox").addClass("d-none");
            $("#emailErrorMsg").addClass("d-none");
            $("#addUserDataFormBox").addClass("d-none");
        });


        $("#showAddUserPopupBox").on("click", () => {
            $("#blurBox").removeClass("d-none");
            $("#addUserDataFormBox").removeClass("d-none");
        });
        function showUserEditBox(x) {
            $("#blurBox").removeClass("d-none");
            $("#editUserDataFormBox_" + x).removeClass("d-none");
        }

        function hideEditUserDataFormBox(x) {
            $("#blurBox").addClass("d-none");
            $("#" + x).addClass("d-none");
        }

        $("#showAddDataPasswordCheckBox").on("change", () => {
            if ($("#showAddDataPasswordCheckBox").prop("checked")) {
                $("#addDataPassword").attr("type", "text");
            } else {
                $("#addDataPassword").attr("type", "password");
            }
        });
        $('#addEmployeeForm').validate({
            rules: {
                Name: "required",
                Address: "required",
                EmpRole: "required",
                EmpStage: "required",
                EmpType: "required",
                JoinDate: "required",
                CurrentStageCompletionDate: "required",
                ContactNumber: {
                    required: true,
                    number: true,
                    minlength: 10
                },
                Email: {
                    required: true,
                    email: true
                },
                Password: {
                    required: true,
                    minlength: 5
                }
            },
            messages: {
                Name: "Name cannot be empty",
                Address: "Address cannot be empty",
                EmpRole: "Role cannot be empty",
                EmpType: "Type cannot be empty",
                EmpStage: "Stage cannot be empty",
                JoinDate: "Date cannot be empty",
                CurrentStageCompletionDate: "Date cannot be empty",
                ContactNumber: {
                    required: "Contact number cannot be empty",
                    number: "It must be a number",
                    minlength: "Number must be of 10 digits"
                },
                Email: {
                    required: "Email cannot be empty",
                    email: "Enter a valid email"
                },
                Password: {
                    required: "Password cannot be empty",
                    minlength: "Password length must be at least 5 characters"
                }
            }
        });


    </script>

    }
